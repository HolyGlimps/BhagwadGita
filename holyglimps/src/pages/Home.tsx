"use client";
import { useState, useEffect } from "react";
import { useTheme } from "next-themes";

import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import { useSession, signIn, signOut } from "next-auth/react";
import ChapterSelector from '@/components/chapterselector';
import styles from '../styles/Home.module.css';
import { ThemeProvider } from 'next-themes';
import Providers from "@/components/providers";

const Homepage: NextPage = () => {
    const { data: session } = useSession();

    const [mounted, setMounted] = useState(false);
    const { theme, setTheme } = useTheme();

    useEffect(() => {
        setMounted(true);
    }, []);

    if (!mounted) {
        return null;
    }

    return (
        <Providers>
            <div className="min-h-screen bg-slate-200 dark:bg-cyan-950">
                <Head>
                    <title>HolyGlipms</title>
                    <meta name="description" content="Generated by create next app" />
                    <link rel="icon" href="/favicon.ico" />
                </Head>
                
                <div className="min-h-screen flex flex-col">

                    <nav className="p-4">
                        <div className="flex justify-between items-center">
                            <a href="#" className="text-black dark:text-white font-semibold text-xl">HolyGlimps</a>
                            {session && session.user ? (
                                <div className="relative group">
                                    {/* <select className="text-black font-semibold bg-white border border-gray-400 rounded-md px-3 py-2">
                                        <option value="" disabled hidden>Select a Chapter</option>
                                        {Array.from({ length: 18 }, (_, i) => (
                                            <option key={i} value={`chapter${i + 1}`}>Chapter {i + 1}</option>
                                        ))}
                                    </select> */}
                                    {/* <ChapterSelector />

                                    <span className="absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none">
                                        <svg className="h-5 w-5 text-white transform group-hover:rotate-180 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M19 9l-7 7-7-7"></path>
                                        </svg>
                                    </span> */}
                                </div>
                            ) : ""}
                            <div>
                                <button onClick={() => setTheme("light")}>Light Mode</button>
                                <br />
                                <button onClick={() => setTheme("dark")}>Dark Mode</button>
                            </div>
                            <div className={styles.signup}>
                                {session && session.user ? (
                                    <button className="text-black dark:text-white font-semibold text-xl" onClick={() => signOut()}>Sign out</button>
                                ) : (
                                    <button className="text-black dark:text-white font-bold text-xl" onClick={() => signIn()}>Sign in</button>
                                )}
                            </div>
                        </div>
                    </nav>

                    <main className="flex-grow flex items-center justify-center">
                        <div className="text-center">
                            {session && session.user ? (
                                <div>
                                    <p className="text-2xl font-semibold text-blue-500 pb-1">
                                        {/* Success! <br /> NOTE : We Want this thing to be displayed as a pop-up message when a user logs in.
                                        Hey {session.user.name}, happy you logged in with {session.user.email} <br /> */}

                                        Get Ready to read the ultimate bhagwat gita
                                    </p>
                                    <div className='flex items-center justify-center pt-2'>
                                        <ChapterSelector />
                                    </div>
                                </div>
                            ) : (
                                <>
                                    <p className="text-xl font-semibold text-blue-500 pb-2">You need to sign in to start reading Bhagwat Gita</p>
                                    <button className="text-black dark:text-white border border-gray-400 rounded-md px-1 font-bold text-xl" onClick={() => signIn()}>Sign in</button>
                                </>
                                
                            )}
                        </div>
                    </main>

                </div>

            </div>
        </Providers>
    );
};

export default Homepage;
